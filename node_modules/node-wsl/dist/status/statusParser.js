"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = void 0;
var eol_1 = __importDefault(require("eol"));
var isString_1 = __importDefault(require("lodash/isString"));
var isObject_1 = __importDefault(require("lodash/isObject"));
var types_1 = require("../types");
var Columns;
(function (Columns) {
    Columns[Columns["DEFAULT"] = 0] = "DEFAULT";
    Columns[Columns["NAME"] = 1] = "NAME";
    Columns[Columns["STATE"] = 2] = "STATE";
    Columns[Columns["VERSION"] = 3] = "VERSION";
})(Columns || (Columns = {}));
/**
 * Parses the status of all wsl distributions currently installed
 *
 * @param listResponse - the response of `wsl.exe --list --verbose --all
 * @returns the list of installed distributions
 */
exports.parse = function (listResponse) {
    // First, get rid of the null bytes
    // eslint-disable-next-line no-control-regex
    var cleaned = listResponse.replace(/\u0000/g, '');
    // Then split the lines and remove empty ones
    var lines = eol_1.default.split(cleaned).filter(function (line) { return line; });
    return lines
        .slice(1)
        .map(function (line) {
        var columns = line.split(/ +/);
        var defaultDist = columns[Columns.DEFAULT].length > 0;
        var name = columns[Columns.NAME];
        var state = columns[Columns.STATE];
        var running = state === types_1.DistributionState.RUNNING;
        var stopped = state === types_1.DistributionState.STOPPED;
        var version = columns[Columns.VERSION];
        return {
            name: name,
            state: state,
            version: version,
            default: defaultDist,
            running: running,
            stopped: stopped,
        };
    })
        .filter(function (status) { return isObject_1.default(status) && isString_1.default(status.name) && status.name !== ''; });
};
//# sourceMappingURL=statusParser.js.map